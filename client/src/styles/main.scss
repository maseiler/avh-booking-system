$primary: #99d4f4;
$background: #fff;
$text: #000;
$text-strong: #000;
$danger: #db5b5b;

@import '../../node_modules/bulma/bulma';

body {
  min-height: 100vh;
}

.home {
  padding-bottom: 3rem;
}

#app {
  text-align: center;
  color: $text;
}

.dropdown {
  width: 100%;

  .dropdown-trigger {
    width: 100%;
  }

  .button {
    display: block;
    width: 100%;
    justify-content: space-between;
  }

  .dropdown-menu {
    width: 100%;
  }
}

.button.is-multiline {
  min-height: 2.25em;
  white-space: unset;
  height: auto;
  flex-direction: column;
}

.search-input-area {
  gap: 0.5rem;
  margin: 0 !important;
}

.search-input-area > div:first-child {
  flex: 1;
}

.max-height-scroll-y {
  height: calc(100vh - 3.25rem); // 3.25rem == nav bar height
  min-height: 3rem;
  overflow: hidden;
  // height:100vh;
  // overflow-y: auto;
}

.max-height-scroll-y .tabs {
  margin-bottom: 0.5rem;
}

.tile.is-narrow {
  .tile.is-parent {
    padding: 1pt;
  }

  .tile.is-vertical > .tile.is-child {
    margin-bottom: 2pt !important;
  }

  .notification {
    border-radius: 2pt;
  }
}

.user-list,
.item-list {
  overflow-y: scroll;
  overflow-x: hidden;
  height: calc(100vh - 10.8rem);
}

.user-list::-webkit-scrollbar,
.item-list::-webkit-scrollbar {
  width: 0.4rem;
}

.user-list::-webkit-scrollbar-track,
.item-list::-webkit-scrollbar-track {
  background-color: #eee;
  border-radius: 0.5em;
}

.user-list::-webkit-scrollbar-thumb,
.item-list::-webkit-scrollbar-thumb {
  background-color: rgba(0 0 0 / 0.1);
  border-radius: 0.5em;
}

#feedbackModal {
  display: block;
  margin: 0 auto;
  width: fit-content;
  position: fixed;
  bottom: 0px;
  left: 50%;
  transform: translateX(-50%);
}

/*
* Kenne das bulma framework zu schlecht,
* desshalb muss ich da leider aktiv dagegen arbeiten ^^
* Hier also ein paar Responsive Resets:
* ~L
*/
.navbar-menu,
.navbar,
.navbar-start {
  display: flex;
  flex-grow: 1;
  flex-shrink: 0;
  padding: 0;
  align-items: center;
  background-color: unset;
  box-shadow: unset;
}

.navbar-end {
  display: flex;
}

.navbar-item > a {
  color: hsl(202, 23%, 23%);
}

.darkLightSwitch,
.autoManualSwitch {
  --gap: 0.5em;
  color: hsl(202, 23%, 23%);
  display: flex;
  align-items: center;

  :first-child {
    margin-right: var(--gap);
  }

  :last-child {
    margin-left: var(--gap);
  }
}

input[type='checkbox'].cbSwitch {
  opacity: 0;
  position: relative;
  width: 0px;
  height: 0px;
}

input[type='checkbox'].cbSwitch + label {
  --disabled-bg: gray;
  --disabled-circle: silver;
  --off-bg: hsl(202, 23%, 23%);
  --off-circle: hsl(202, 23%, 50%);
  --on-bg: green;
  --on-circle: lime;
  --outline: hsl(0deg 0% 85%);

  position: relative;
  top: -0.5em;
  left: 0.5em;
  cursor: pointer;
  display: flex;
  align-items: center;
  padding-left: 2em;
  font-size: 1em;
}

input[type='checkbox'].cbSwitch:disabled + label {
  color: var(--disabled-bg);
  cursor: default;
}

input[type='checkbox'].cbSwitch + label::before {
  content: '';
  position: absolute;
  height: 1em;
  width: 2em;
  left: -0.5em;
  top: -0.001em;
  border-radius: 1em;
  background-color: var(--off-bg);
  margin-right: 0.5em;
  transition: all 200ms ease;
  display: flex;
  align-items: center;
}

input[type='checkbox'].cbSwitch + label::after {
  //content:"\2715";*/
  content: '';
  position: absolute;
  height: 1.49em;
  width: 1.49em;
  left: -0.66em;
  top: 0.083em;
  font-size: 0.6em;
  border-radius: 1em;
  background-color: var(--off-circle);
  transform: translateX(0);
  transition: all 200ms ease;
  display: flex;
  justify-content: center;
  align-items: center;
}

input[type='checkbox'].cbSwitch:checked + label::after {
  transform: translateX(100%);
  background-color: var(--on-circle);
  // content:"\2713";
  content: '';
}

input[type='checkbox'].cbSwitch:checked + label::before {
  background-color: var(--on-bg);
}

input[type='checkbox'].cbSwitch:checked:disabled + label::before,
input[type='checkbox'].cbSwitch:disabled + label::before {
  background-color: var(--disabled-bg);
}

input[type='checkbox'].cbSwitch:checked:disabled + label::after,
input[type='checkbox'].cbSwitch:disabled + label::after {
  background-color: var(--disabled-circle);
}

input[type='checkbox'].cbSwitch:focus-within + label::before {
  outline: 0.1em solid var(--outline);
}

.table {
  border-radius: 4px;
}

input[type='date'] {
  position: relative;
  text-align: right;

  &::before {
    content: attr(placeholder);
    position: absolute;
    text-align: left;
    inset: 0;
    padding: 0.5em;
    z-index: 1;
    /*backdrop-filter:blur(3rem);*/
    pointer-events: none;
  }
}

//Darkmode
.dark {
  $main-background: hsl(0deg 0% 15%);
  $menu-background: hsl(229deg 53% 35%);
  $button: hsl(229deg 53% 35%);
  $FAicon: hsl(0deg 0% 85%);
  $text: hsl(0deg 0% 85%);
  $hover: hsl(49deg 100% 40%);
  $hover-text: hsl(0deg 0% 15%);
  $warning: hsl(49deg 100% 40%);
  $warning-text: hsl(0deg 0% 15%);
  $material-2: hsl(0deg 0% 20%);
  $danger: #db5b5b;
  $danger-text: hsl(0deg 0% 15%);

  background-color: $main-background;

  .navbar.is-primary {
    background-color: $menu-background;
  }

  .navbar.is-primary .navbar-brand > .navbar-item:hover,
  .navbar.is-primary .navbar-brand > .navbar-item:focus {
    background-color: transparent;
  }

  .navbar-item svg,
  .navbar-item svg {
    color: $FAicon;
  }

  .box {
    background-color: $main-background;
  }

  .home {
    background-color: $main-background;
    color: $text;
  }

  .title,
  .subtitle {
    color: $text;
  }

  .menu-list {
    a {
      color: $text;

      &:hover,
      &:focus {
        color: $main-background;
      }
    }
  }

  .button.is-white {
    background-color: $main-background;
    color: $text;
  }

  .button.is-white:hover,
  .button.is-white:focus {
    background-color: $material-2;
    color: $text;
  }

  .button,
  .button .is-link {
    background-color: $button;
    border-color: transparent;
    color: $text;
  }

  .button:hover,
  .button:focus,
  .button .is-link:hover,
  .button .is-link:focus {
    background-color: lighten($button, 10%);
  }

  .user-list .button,
  .item-list .button {
    background-color: $material-2;
    border-color: transparent;
    color: $text;
  }

  .user-list .button:hover,
  .user-list .button:focus,
  .item-list .button:hover,
  .item-list .button:focus {
    background-color: lighten($material-2, 10%);
  }

  .button.is-warning {
    background-color: $warning;
    color: $warning-text;
  }

  .button.is-warning:hover,
  .button.is-warning:focus {
    background-color: lighten($warning, 10%);
  }

  .button.is-danger {
    background-color: $danger;
    border-color: transparent;
    color: $danger-text;
  }

  .button.is-danger:hover,
  .button.is-danger:focus {
    background-color: lighten($danger, 10%);
  }

  .tabs a {
    color: $text;
  }

  .tabs a:hover,
  .tabs a:focus {
    color: $hover;
    border-bottom-color: $hover;
  }

  input,
  input:focus,
  input::placeholder {
    background-color: $material-2;
    color: $text;
    border-color: transparent;
  }

  input + .icon,
  input:focus + .icon,
  .control.has-icons-left input:focus ~ .icon {
    color: $text;
  }

  .user-list::-webkit-scrollbar-track,
  .item-list::-webkit-scrollbar-track {
    background-color: $material-2;
  }

  .user-list::-webkit-scrollbar-thumb,
  .item-list::-webkit-scrollbar-thumb {
    background-color: hsl(0deg 0% 100% / 10%);
  }

  .table {
    background-color: $material-2;
    color: $text;
  }

  .table thead th,
  .table tfoot th {
    color: $text;
  }

  .table.is-striped tbody tr:not(.is-selected):nth-child(2n) {
    background-color: $main-background;
  }

  .table.is-hoverable tbody tr:hover {
    color: $main-background;
  }

  .has-text-black {
    color: $text !important;
  }

  .message.is-link {
    background-color: $material-2;
  }

  input[type='checkbox'].cbSwitch + label {
    --disabled-bg: gray;
    --disabled-circle: silver;
    --off-bg: #{$FAicon};
    --off-circle: #{$main-background};
    --on-bg: green;
    --on-circle: lime;
    --outline: hsl(0deg 0% 85%);
  }

  ::-webkit-calendar-picker-indicator {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="15" viewBox="0 0 24 24"><path fill="%23bbbbbb" d="M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z"/></svg>');
  }
}

@import url('https://fonts.googleapis.com/css?family=Nunito:400,700');

$family-sans-serif: 'Nunito', sans-serif;
